


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             ARMex, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000         start
    4 00000000 E59F0100        LDR              r0,floating_point01
    5 00000004 E59F1100        LDR              r1,floating_point02
    6 00000008         
    7 00000008 E1A02FA0        MOV              r2,r0,LSR#31
    8 0000000C         ; sign bit1
    9 0000000C         
   10 0000000C E1A03080        MOV              r3,r0,LSL#1
   11 00000010 E1A03C23        MOV              r3,r3,LSR#24
   12 00000014         ; exponent1
   13 00000014         
   14 00000014 E1A04480        MOV              r4,r0,LSL#9
   15 00000018 E1A044A4        MOV              r4,r4,LSR#9
   16 0000001C E2844502        ADD              r4,r4,#0x00800000
   17 00000020         ; mantissa1
   18 00000020         
   19 00000020 E1A05FA1        MOV              r5,r1,LSR#31
   20 00000024         ; sign bit2
   21 00000024         
   22 00000024 E1A06081        MOV              r6,r1,LSL#1
   23 00000028 E1A06C26        MOV              r6,r6,LSR#24
   24 0000002C         ; exponent2
   25 0000002C         
   26 0000002C E1A07481        MOV              r7,r1,LSL#9
   27 00000030 E1A074A7        MOV              r7,r7,LSR#9
   28 00000034 E2877502        ADD              r7,r7,#0x00800000
   29 00000038         ; mantissa2
   30 00000038         
   31 00000038 E1520005        CMP              r2,r5
   32 0000003C 0A000000        BEQ              float_addition
   33 00000040 1A000014        BNE              float_subtraction
   34 00000044         
   35 00000044         float_addition
   36 00000044 E1530006        CMP              r3,r6
   37 00000048         ;compare exponent
   38 00000048 B0468003        SUBLT            r8,r6,r3
   39 0000004C C0438006        SUBGT            r8,r3,r6
   40 00000050 B1A04834        MOVLT            r4,r4,LSR r8
   41 00000054 C1A07837        MOVGT            r7,r7,LSR r8
   42 00000058         
   43 00000058 E0849007        ADD              r9,r4,r7
   44 0000005C E1A0ABA9        MOV              r10,r9,LSR#23
   45 00000060         
   46 00000060 E35A0001        CMP              r10,#1
   47 00000064         ;Check left side of dot is 1
   48 00000064         
   49 00000064 C2888001        ADDGT            r8,r8,#1
   50 00000068 C1A090A9        MOVGT            r9,r9,LSR#1
   51 0000006C         ;if greater than 1, Shift Right 1 bit
   52 0000006C         
   53 0000006C B2488001        SUBLT            r8,r8,#1
   54 00000070 B1A09089        MOVLT            r9,r9,LSL#1
   55 00000074         ;if lower than 1, Shift Left 1 bit
   56 00000074         
   57 00000074 E2499502        SUB              r9,r9,#0x00800000
   58 00000078         ;get mantissa
   59 00000078         



ARM Macro Assembler    Page 2 


   60 00000078 E1530006        CMP              r3,r6
   61 0000007C A083A008        ADDGE            r10,r3,r8
   62 00000080 B086A008        ADDLT            r10,r6,r8
   63 00000084 E1A02402        MOV              r2,r2,LSL#8
   64 00000088 E08AB002        ADD              r11,r10,r2
   65 0000008C E1A0BB8B        MOV              r11,r11,LSL#23
   66 00000090 E08BB009        ADD              r11,r11,r9
   67 00000094         
   68 00000094 EA000018        B                str_state
   69 00000098         
   70 00000098         float_subtraction
   71 00000098 E1530006        CMP              r3,r6
   72 0000009C         ;compare exponent
   73 0000009C B0468003        SUBLT            r8,r6,r3
   74 000000A0 C0438006        SUBGT            r8,r3,r6
   75 000000A4 B1A04834        MOVLT            r4,r4,LSR r8
   76 000000A8 C1A07837        MOVGT            r7,r7,LSR r8
   77 000000AC         
   78 000000AC E1540007        CMP              r4,r7
   79 000000B0 B0479004        SUBLT            r9,r7,r4
   80 000000B4 C0449007        SUBGT            r9,r4,r7
   81 000000B8         
   82 000000B8 E1A0ABA9        MOV              r10,r9,LSR#23
   83 000000BC         
   84 000000BC E35A0001        CMP              r10,#1
   85 000000C0         ;Check left side of dot is 1
   86 000000C0         
   87 000000C0 C2888001        ADDGT            r8,r8,#1
   88 000000C4 C1A090A9        MOVGT            r9,r9,LSR#1
   89 000000C8         ;if greater than 1, Shift Right 1 bit
   90 000000C8         
   91 000000C8 B2488001        SUBLT            r8,r8,#1
   92 000000CC B1A09089        MOVLT            r9,r9,LSL#1
   93 000000D0         ;if lower than 1, Shift Left 1 bit
   94 000000D0         
   95 000000D0 E2499502        SUB              r9,r9,#0x00800000
   96 000000D4         ;get mantissa
   97 000000D4         
   98 000000D4 E1540007        CMP              r4,r7
   99 000000D8 C1A02402        MOVGT            r2,r2,LSL#8
  100 000000DC D1A02405        MOVLE            r2,r5,LSL#8
  101 000000E0 E1530006        CMP              r3,r6
  102 000000E4 C0833008        ADDGT            r3,r3,r8
  103 000000E8 D0863008        ADDLE            r3,r6,r8
  104 000000EC E083A002        ADD              r10,r3,r2
  105 000000F0 E1A0BB8A        MOV              r11,r10,LSL#23
  106 000000F4 E08BB009        ADD              r11,r11,r9
  107 000000F8         
  108 000000F8 EAFFFFFF        B                str_state
  109 000000FC         
  110 000000FC         str_state
  111 000000FC E59F000C        LDR              r0,TEMPADDR
  112 00000100 E580B000        STR              r11,[r0]
  113 00000104 E1A0F00E        MOV              pc,lr
  114 00000108         
  115 00000108         
  116 00000108 42680000 
                       floating_point01
                               &                0x42680000  ; 58(DEC) = 3A(HEX)



ARM Macro Assembler    Page 3 


                                                            
  117 0000010C         ;floating_point01 & 0xC2680000 ; -58(DEC) = FFFF FFFF FF
                       FF FFC6(HEX)
  118 0000010C         ;floating_point02 & 0x42280000 ; 42(DEC) = 2A(HEX)
  119 0000010C C2280000 
                       floating_point02
                               &                0xC2280000  ; -42(DEC) = FFFF F
                                                            FFF FFFF FFD6(HEX)
  120 00000110         
  121 00000110 40000000 
                       TEMPADDR
                               &                &40000000
  122 00000114         
  123 00000114                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=ARM9E --apcs=interwork 
--depend=.\objects\week7_04.d -o.\objects\week7_04.o -IC:\Keil_v5\ARM\RV31\INC 
--predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 538" --list=.\l
istings\week7_04.lst week7_04.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARMex 00000000

Symbol: ARMex
   Definitions
      At line 1 in file week7_04.s
   Uses
      None
Comment: ARMex unused
TEMPADDR 00000110

Symbol: TEMPADDR
   Definitions
      At line 121 in file week7_04.s
   Uses
      At line 111 in file week7_04.s
Comment: TEMPADDR used once
float_addition 00000044

Symbol: float_addition
   Definitions
      At line 35 in file week7_04.s
   Uses
      At line 32 in file week7_04.s
Comment: float_addition used once
float_subtraction 00000098

Symbol: float_subtraction
   Definitions
      At line 70 in file week7_04.s
   Uses
      At line 33 in file week7_04.s
Comment: float_subtraction used once
floating_point01 00000108

Symbol: floating_point01
   Definitions
      At line 116 in file week7_04.s
   Uses
      At line 4 in file week7_04.s
Comment: floating_point01 used once
floating_point02 0000010C

Symbol: floating_point02
   Definitions
      At line 119 in file week7_04.s
   Uses
      At line 5 in file week7_04.s
Comment: floating_point02 used once
start 00000000

Symbol: start
   Definitions
      At line 3 in file week7_04.s
   Uses
      None
Comment: start unused
str_state 000000FC

Symbol: str_state



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 110 in file week7_04.s
   Uses
      At line 68 in file week7_04.s
      At line 108 in file week7_04.s

8 symbols
340 symbols in table
